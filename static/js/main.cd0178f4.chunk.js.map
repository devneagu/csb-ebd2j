{"version":3,"sources":["App.js","index.js"],"names":["Styles","styled","div","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","RowItems","BoxItem","getDuration","dateFuture","dateNow","seconds","Math","floor","minutes","hours","days","fnReducer","state","action","console","log","type","hasStarted","userPlane","j","computerPlane","parseInt","random","gridN","move","errorMessage","startGameDate","Date","gameFinished","won","history","endGameDate","result","moves","length","duration","computerMove","some","el","by","App","game","dispatch","useReducer","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","Array","keys","index","className","onClick","style","color","ReactTable","toLocaleDateString","sort","a","b","Header","accessor","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.cd0178f4.chunk.js","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport \"./styles.css\";\nimport styled from \"styled-components\";\nimport { useTable } from \"react-table\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n\n  // Render the UI for your table\n  return (\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nconst RowItems = styled.div`\n  padding: 0;\n  margin: 0;\n  line-height: 0;\n`;\nconst BoxItem = styled.div`\n  border: 1px solid black;\n  width: 30px;\n  height: 30px;\n  display: inline-block;\n  background: white;\n  transition: 0.5s;\n  &.userMove {\n    background: gray;\n  }\n  &.userShip {\n    background: orange;\n  }\n  &.computerShip {\n    background: red;\n  }\n  &.computerMove {\n    background: blue;\n  }\n  &.destroyed {\n    background: black;\n  }\n`;\n\nfunction getDuration(dateFuture, dateNow) {\n  var seconds = Math.floor((dateFuture - dateNow) / 1000);\n  var minutes = Math.floor(seconds / 60);\n  var hours = Math.floor(minutes / 60);\n  var days = Math.floor(hours / 24);\n\n  hours = hours - days * 24;\n  minutes = minutes - days * 24 * 60 - hours * 60;\n  seconds = seconds - days * 24 * 60 * 60 - hours * 60 * 60 - minutes * 60;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n  return minutes + \":\" + seconds;\n}\n\nfunction fnReducer(state, action) {\n  console.log(\"hi\");\n  switch (action.type) {\n    case \"selected\":\n      console.log(action);\n      if (!state.hasStarted) {\n        var userPlane = { i: action.i, j: action.j };\n        var computerPlane = {\n          i: parseInt(Math.random() * state.gridN),\n          j: parseInt(Math.random() * state.gridN)\n        };\n        while (\n          computerPlane.i === userPlane.i &&\n          userPlane.j === computerPlane.j\n        ) {\n          computerPlane = {\n            i: parseInt(Math.random() * state.gridN),\n            j: parseInt(Math.random() * state.gridN)\n          };\n        }\n        return {\n          ...state,\n          computerPlane,\n          userPlane,\n          hasStarted: true,\n          move: 0,\n          errorMessage: null,\n          startGameDate: new Date()\n        };\n      }\n      if (\n        action.i === state.computerPlane.i &&\n        action.j === state.computerPlane.j\n      ) {\n        return {\n          ...state,\n          gameFinished: true,\n          won: true,\n          errorMessage: null,\n          history: [\n            ...state.history,\n            {\n              startGameDate: state.startGameDate,\n              endGameDate: new Date(),\n              result: \"Won\",\n              moves: state.moves.length / 2 + 1,\n              duration: getDuration(new Date(), state.startGameDate)\n            }\n          ]\n        };\n      }\n      if (state.gameFinished) {\n        return {\n          ...state,\n          errorMessage: null\n        };\n      }\n\n      var computerMove = {\n        i: parseInt(Math.random() * state.gridN),\n        j: parseInt(Math.random() * state.gridN)\n      };\n      while (\n        (state.computerPlane.i === computerMove.i &&\n          state.computerPlane.j === computerMove.j) ||\n        state.moves.some(\n          (el) => el.i === computerMove.i && el.j === computerMove.j\n        ) ||\n        (action.i === computerMove.i && action.j === computerMove.j)\n      ) {\n        computerMove = {\n          i: parseInt(Math.random() * state.gridN),\n          j: parseInt(Math.random() * state.gridN)\n        };\n      }\n      if (state.moves.some((el) => el.i === action.i && el.j === action.j)) {\n        console.log(\"Grid already bombed\");\n        return {\n          ...state,\n          errorMessage: \"Grid already Bombed!\"\n        };\n      }\n      if (\n        computerMove.i === state.userPlane.i &&\n        computerMove.j === state.userPlane.j\n      ) {\n        return {\n          ...state,\n          gameFinished: true,\n          won: false,\n          errorMessage: false,\n          move: state.move + 1,\n          moves: [\n            ...state.moves,\n            { i: action.i, j: action.j, by: \"user\" },\n            { i: computerMove.i, j: computerMove.j, by: \"computer\" }\n          ],\n          history: [\n            ...state.history,\n            {\n              startGameDate: state.startGameDate,\n              endGameDate: new Date(),\n              result: \"Lost\",\n              moves: state.moves.length / 2,\n              duration: getDuration(new Date(), state.startGameDate)\n            }\n          ]\n        };\n      }\n      return {\n        ...state,\n        move: state.move + 1,\n        moves: [\n          ...state.moves,\n          { i: action.i, j: action.j, by: \"user\" },\n          { i: computerMove.i, j: computerMove.j, by: \"computer\" }\n        ],\n        errorMessage: null\n      };\n    case \"restart\":\n      return {\n        gridN: 7,\n        hasStarted: false,\n        gameFinished: false,\n        move: null,\n        moves: [],\n        errorMessage: null,\n        won: null,\n        startGameDate: null,\n        history: [...state.history]\n      };\n    default:\n      console.log(\"default\");\n      return state;\n  }\n}\nexport default function App() {\n  const [game, dispatch] = useReducer(fnReducer, {\n    gridN: 7,\n    hasStarted: false,\n    gameFinished: false,\n    move: null,\n    moves: [],\n    errorMessage: null,\n    won: null,\n    history: JSON.parse(localStorage.getItem(\"battleplanes5\")) || [],\n    startGameDate: null\n  });\n  console.log(game);\n  useEffect(() => {\n    localStorage.setItem(\"battleplanes5\", JSON.stringify(game.history));\n  }, [game.history.length]);\n\n  return (\n    <div>\n      {!game.hasStarted && !game.gameFinished && (\n        <p>Select your battle position</p>\n      )}\n      {!game.gameFinished && game.move != null && (\n        <p>Destroy your opponent !</p>\n      )}\n      {[...Array(game.gridN).keys()].map((i, index) => (\n        <RowItems key={Math.random() * 100000000}>\n          {[...Array(game.gridN).keys()].map((j, index) => (\n            <BoxItem\n              key={Math.random() * 100000000}\n              className={`\n                  ${\n                    game.moves?.some(\n                      (el) => el.i === i && el.j === j && el.by === \"computer\"\n                    )\n                      ? \"computerMove\"\n                      : \"\"\n                  }    \n                  ${\n                    game.userPlane?.i === i && game.userPlane?.j === j\n                      ? \"userShip\"\n                      : \"\"\n                  }\n                  ${\n                    game.gameFinished &&\n                    game.computerPlane?.i === i &&\n                    game.computerPlane?.j === j\n                      ? \"computerShip\"\n                      : \"\"\n                  }\n                  \n                  ${\n                    game.moves?.some(\n                      (el) => el.i === i && el.j === j && el.by === \"user\"\n                    )\n                      ? \"userMove\"\n                      : \"\"\n                  }\n                  ${\n                    game.gameFinished &&\n                    game.won === false &&\n                    i === game.userPlane.i &&\n                    j === game.userPlane.j\n                      ? \"destroyed\"\n                      : \"\"\n                  }\n                  }`}\n              onClick={() => dispatch({ type: \"selected\", i, j })}\n            />\n          ))}\n        </RowItems>\n      ))}\n      {game.gameFinished && (\n        <>\n          {game.won && <h3>You've won !</h3>}\n          {!game.won && <h3>Unfortunately, you've lost...</h3>}\n          <p>\n            Number of moves :{\" \"}\n            <span style={{ color: \"red\" }}>\n              {game.history[game.history.length - 1].moves}\n            </span>\n          </p>\n          <button onClick={() => dispatch({ type: \"restart\" })}>\n            Play Again!\n          </button>\n        </>\n      )}\n      {game.errorMessage && <p>{game.errorMessage}</p>}\n      {ReactTable(game.history)}\n    </div>\n  );\n}\n\nfunction ReactTable(data) {\n  const columns = [\n    {\n      Header: \"Score table\",\n      columns: [\n        {\n          Header: \"Date\",\n          accessor: \"startGameDate\"\n        },\n        {\n          Header: \"Result\",\n          accessor: \"result\"\n        },\n        {\n          Header: \"Moves\",\n          accessor: \"moves\"\n        },\n        {\n          Header: \"Duration\",\n          accessor: \"duration\"\n        }\n      ]\n    }\n  ];\n  if (data.length > 0) {\n    console.log(\"DATA:\");\n    console.log(data);\n    data = data.map((el) => {\n      return {\n        ...el,\n        startGameDate: new Date(el.startGameDate).toLocaleDateString()\n      };\n    });\n    data.sort(function (a, b) {\n      return b.moves - a.moves;\n    });\n  }\n  return (\n    <Styles>\n      <Table columns={columns} data={data} />\n    </Styles>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}